# Change this file according to your settings
org.camunda.bpm.rpa:

  # optional license file location, defaults to camunda-license.txt on the classpath or ${user.home}/.camunda/license.txt
#  license-file: file:///${user.dir}/license.txt
  # optional flag to opt-in on sending environment and usage data to Camunda. This is turned off by default. Read more about this in the docs: https://docs.camunda.org/manual/latest/introduction/telemetry/
#  enable-telemetry: true
  
  camunda-api:
    url: http://localhost:8080/engine-rest
    # add authentication if necessary
#    authentication:
#      type: basic
#      username: 
#      password: 

### UiPath

  uipath-api:
    # a list of external task topics to subscribe to
    topics: uipath, RPA
    # the base URL of your UiPath Orchestrator to send requests to (adjust to your Orchestrator URL, use https://platform.uipath.com for UiPath Automation Cloud)
    url: https://cloud.uipath.com/ #https://platform.uipath.com/
    # optional Account Logical Name (necessary if you use UiPath Automation Cloud)
    account-name: <ACCOUNT NAME>
    # Tenant Logical Name
    tenant-name: <TENANT NAME>
    # optional folder path, defaults to "Default"
    folder-path: DefaultClassicFolder
    # optional organization unit id
    organization-unit-id: <ORG-ID -> SEE MANUAL HOW TO OBTAIN THIS IN GOOGLE CHROME DEVELOPER TOOLS > REQUEST-Header > X-Organizational Unit>
    authentication:
      # type can be either on-premises (UiPath On-Premises) or cloud (UiPath Automation Cloud)
      type: cloud
      # for on-premises installations, adjust to your Orchestrator URL
      # auth-url: <your-URL>/api/account/authenticate
      # auth-url for cloud
      auth-url: https://account.uipath.com/oauth/token
      # use <username>/<e-mail> (on-premises) or <client-id> (cloud)
      user: <CLIENT-ID>
      # use <password> (on-premise) or <refresh-token>/<user-key> (cloud)
      key: <USER-KEY>
      # optional time in minutes until authentication token expires, defaults to 30 (on-premises) or 1440 (cloud)
#      token-expiration:
    # the job status update mechanism to use, can be either webhook or polling
    status-update-method: polling
    # webhook properties section, only required if 'status-update-method' is set to 'webhook'
 #   webhook:
      # secret used in your UiPath webhook configuration
  #    secret: 
      # optional relative path of the webhook endpoint in your application, defaults to '/webhook/event'
#      path: 
    # optional polling properties section, only considered if 'status-update-method' is set to 'polling'
#    polling:
      # optional rate in milliseconds to use for polling bot status updates, defaults to 4000
#      rate-ms:
      # optional initial delay in milliseconds before polling for bot status updates starts after application startup, defaults to 4000 
#      init-delay-ms:
      # optional number of jobs to poll for in one request in order to not exceed the API request character limit, defaults to 13
#      poll-size: 


### Automation Anywhere

#  automation-anywhere-api:
    # a list of external task topics to subscribe to
 #   topics: automationanywhere, RPA
    # the base URL of your Automation Anywhere Controlroom to send requests to
  #  url: <your-URL>
   # authentication:
      # name of Automation Anywhere user
    #  user: <your-username>
      # password of Automation Anywhere user. Use either password or api key to authenticate the user.
     # password: <your-password>
      # API key for authentication of the Automation Anywhere user. Use either password or api key to authenticate the user. For more information visit https://docs.automationanywhere.com/bundle/enterprise-v2019/page/enterprise-cloud/topics/control-room/control-room-api/cloud-authenticate-password.html
#      api-key: <your-api-key>
      # optional time in minutes until authentication token expires, defaults to 20
#      token-expiration:
#    polling:
      # the rate in milliseconds to use for polling bot status updates, defaults to 4000
#      rate-ms: 
      # the initial delay in milliseconds before polling for bot status updates starts after application startup, defaults to 4000 
#      init-delay-ms: 
      # the number of bots to poll for in one request in order to not exceed the database parameter limit, defaults to 2000
#      poll-size: 


### General

server.port: 8081
logging.level.org.camunda.bpm.rpa.bridge: DEBUG